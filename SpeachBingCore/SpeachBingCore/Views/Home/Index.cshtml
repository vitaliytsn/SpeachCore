@model SpeachBingCore.Models.BingApi
@{
    ViewBag.Title = "Home Page";
}
<center>
    @using (Html.BeginForm("Index", "Home", FormMethod.Post))
    {
        <!-- form goes here -->

        <input type="submit" value="send" />
    }
</center>

<div>
    <center>
        <h4>Speach Recognizer</h4>
        <hr />
        <dl class="dl-horizontal">
            <dd>
                @Html.DisplayFor(model => model._logText)
            </dd>
        </dl>
    </center>
</div>
<div>
    <center>
        <td>
            <p>@ViewBag.logs</p>
        </td>
        </center>
</div>
<!DOCTYPE html>
<html>
<center>
    <img id="imageid" src="../../Resources/record.png" alt="image" onmousedown="myFunctionStart()" onmouseup="myFunctionStop()" />
</center>
<body>
    <script>
        var recorder;

        function myFunctionStop() {
            document.getElementById("imageid").src = "../../Resources/record.png";
            recorder.stop();
        }

        //sample size audio {sampleSize: 16}
        function myFunctionStart() {
            document.getElementById("imageid").src = "../../Resources/record1.png";
            navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(stream => {
                const chunks = [];
                var options = {
                    audioBitsPerSecond: 128000,
                    mimeType: 'audio/wav'
                };
                recorder = new MediaRecorder(stream);
                recorder.mimeType = "audio/wav";
                recorder.ondataavailable = e => {
                    chunks.push(e.data);
                    if (recorder.state == 'inactive') {

                        const blob = new Blob(chunks, { type: 'audio/wav' });

                        ///dopisz href
                        var formData = new FormData();
                        formData.append("postedFile", blob);
                        $.ajax({
                            type: 'POST',
                            url: window.location.href + '/Home/Action',
                            data: formData,
                            processData: false,
                            contentType: false,
                            success: function (response) {
                                alert("Voice was recorded");
                            },
                            error: function (response) {
                                alert("blad");
                            }
                        });
                    }
                };

                recorder.start(1000);
                setTimeout(() => {
                    recorder.stop();
                },
                    15000);
            }).catch(console.error);
        }
    </script>
</body>
</html>
